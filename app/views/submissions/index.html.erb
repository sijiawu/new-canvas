<% meeting = Meeting.find_by_title(params["title"]) %>
<% @submissions = meeting.submissions.sort_by(&:created_at) %>

<div class="card" style="margin-bottom:20px">
  <div class="card-body" style="padding-top: 30px">
    <h4> Post your work for <%=meeting.title %> here </h4>
  </div>
</div>

    <% if User.find_by(id: cookies[:user_id]) != nil %>
      <div class="toggle-pell-display" onclick="appendPellEditor(this,'post-submission');">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-90deg-left" viewBox="0 0 16 16" style="float:left; margin:10px 10px 0">
          <path fill-rule="evenodd" d="M1.146 4.854a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 4H12.5A2.5 2.5 0 0 1 15 6.5v8a.5.5 0 0 1-1 0v-8A1.5 1.5 0 0 0 12.5 5H2.707l3.147 3.146a.5.5 0 1 1-.708.708l-4-4z"/>
        </svg>
        <p style="cursor: pointer;">Reply</p>
      </div>
      
      <% @submissions.each_with_index do |submission, index| %>
  
      <div class="card" style="margin-top:20px">
        <div class="card-body">
          <div style="margin-bottom:20px;">
            <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="gray" class="bi bi-person-circle" viewBox="0 0 16 16" style="float:left; margin-right:20px">
              <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z"/>
              <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z"/>
            </svg>
            <div>
              <%= link_to "#{submission.user.username}", "/submissions/user/#{submission.user.id}", {:style=>"color:#347bad;"} %>
              <p style="font-size: small"><%= submission.created_at.localtime.to_time.strftime('%m/%d/%Y %H:%M') %></p>
            </div>
          </div>
          
          <div id="raw-content-<%=index%>" class="toggle-pell-display"><%= raw(submission.content) %></div>

          <% if User.find_by(id: cookies[:user_id]) != nil %>
            <% if User.find_by(id: cookies[:user_id]).id == submission.user.id %>
              <hr>
              <p style="color:347bad !important;">
              <a class="toggle-pell-display" style="color:#347bad" onclick="appendPellEditor(this,'edit-submission','<%= submission.id %>','raw-content-<%= index %>');">[Edit]</a>
              <%= link_to "[Delete]", "/submissions/#{submission.id}", method: "delete", data: { confirm: "Are you sure you want to delete this submission?" } %>
              </p>
            <% end %>
          <% end %>

          <div class="toggle-pell-display" onclick="appendPellEditor(this,'post-comment','<%= submission.id %>');">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-90deg-left" viewBox="0 0 16 16" style="float:left; margin:10px 10px 0">
              <path fill-rule="evenodd" d="M1.146 4.854a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 4H12.5A2.5 2.5 0 0 1 15 6.5v8a.5.5 0 0 1-1 0v-8A1.5 1.5 0 0 0 12.5 5H2.707l3.147 3.146a.5.5 0 1 1-.708.708l-4-4z"/>
            </svg>
            <p style="cursor: pointer;">Reply</p>
          </div>

        </div>
      </div>

        <% submission.comments.each_with_index do |comment, j| %>
          <div class="card" style="margin-left:20px;">

            <div class="card-body">
              <div style="margin-bottom:20px;">
                <svg xmlns="http://www.w3.org/2000/svg" width="40" height="40" fill="gray" class="bi bi-person-circle" viewBox="0 0 16 16" style="float:left; margin-right:20px">
                  <path d="M11 6a3 3 0 1 1-6 0 3 3 0 0 1 6 0z"/>
                  <path fill-rule="evenodd" d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm8-7a7 7 0 0 0-5.468 11.37C3.242 11.226 4.805 10 8 10s4.757 1.225 5.468 2.37A7 7 0 0 0 8 1z"/>
                </svg>
                <div>
                  <%= link_to "#{comment.user.username}", "/submissions/user/#{comment.user.id}", {:style=>"color:#347bad; font-size: small;"} %>
                  <p style="font-size: x-small"><%= comment.created_at.localtime.to_time.strftime('%m/%d/%Y %H:%M') %></p>
                </div>
              </div>

              <div id="raw-content-<%= index %>-<%=j%>" class="toggle-pell-display"><%= raw(comment.content) %></div>

              <% if User.find_by(id: cookies[:user_id]) != nil %>
                <% if User.find_by(id: cookies[:user_id]).id == comment.user.id %>
                <hr>
                  <a class="toggle-pell-display" style="color:#347bad" onclick="appendPellEditor(this,'edit-comment','<%= comment.id %>','raw-content-<%= index %>-<%=j%>');">[Edit]</a>
                  <%= link_to "[Delete]", "/comments/#{comment.id}", method: "delete", data: { confirm: "Are you sure you want to delete this comment?" } %>
                <% end %>
              <% end %>

            </div>
          </div>
        <% end %>
    <% end %>
    <% else %>
      <%= link_to "Please log in to view or post submissions", "/sessions/new" %>
    <% end %>

  
  <hr style="margin-top:20px;">

  <script>
    function appendPellEditor(button,editorType,elementID,rawTextDivID) {
      if (document.getElementById("pell") != null) { document.getElementById("pell").remove(); }
      
      // make all reply buttons, edit buttons and temporarily hidden text fields (re)appear, only hide "this" button
      elements = document.getElementsByClassName("toggle-pell-display")
      for (const e of elements) {
        e.style.display = 'inline';
      }
      button.style.display = "none"

      var text = ""
      if (editorType == "post-submission") {
        text ='<div id="pell"><%= form_tag "/submissions/", method: "post" do %><div id="editor" class="editor border"></div><div class="form-group"><textarea id="markup" class="form-control" name="content" style="display:none;"></textarea></div><%= hidden_field_tag :meeting_id, meeting.id %><%= hidden_field_tag :user_id, cookies[:user_id] %><button class="btn btn-primary btn-block">Post Submission</button><% end %></div>';
      } else if (editorType == "post-comment") {
        text = '<div id="pell"><%= form_tag "/comments/", method: "post" do %><div id="editor" class="editor border" style="height:180px"></div><div class="form-group"><textarea id="markup" class="form-control markup" name="content" style="display:none;"></textarea></div><input type="hidden" name="submission_id" id="submission_id" value="' + elementID +  '" autocomplete="off" /><%= hidden_field_tag :user_id, cookies[:user_id] %><button class="btn btn-primary btn-block">Post Comment</button><% end %></div>'
      } else if (editorType == "edit-submission") {
        var rawTextDiv = document.getElementById(rawTextDivID)
        rawTextDiv.style.display = "none"
        
        text = '<div id="pell"><%= form_tag "/submissions/", method: "patch" do %><div id="editor" class="editor border"></div><div class="form-group"><textarea id="markup" class="form-control markup" name="content" style="display:none;"></textarea></div><input type="hidden" name="id" id="id" value="' + elementID +  '" autocomplete="off" /><%= hidden_field_tag :user_id, cookies[:user_id] %><button class="btn btn-primary btn-block">Done</button><% end %></div>'
      } else if (editorType == "edit-comment") {
        var rawTextDiv = document.getElementById(rawTextDivID)
        rawTextDiv.style.display = "none"
        
        text = '<div id="pell"><%= form_tag "/comments/", method: "patch" do %><div id="editor" class="editor border" style="height:180px"></div><div class="form-group"><textarea id="markup" class="form-control markup" name="content" style="display:none;"></textarea></div><input type="hidden" name="id" id="id" value="' + elementID +  '" autocomplete="off" /><%= hidden_field_tag :user_id, cookies[:user_id] %><button class="btn btn-primary btn-block">Done</button><% end %></div>'
      } else {
        return;
      }
        
      button.insertAdjacentHTML("beforebegin",text); 

      const pell = window.pell;  
      const editor = document.getElementById("editor");
      const markup = document.getElementById("markup");

      pell.init({
        element: editor,
        actions: ['bold', 'italic', 'heading1', 'heading2', 'underline','strikethrough','olist', 'ulist','line'],
        onChange: (html) => {
          markup.innerHTML = "";
          markup.innerText += html;
        }
      })

      if (editorType == "edit-submission" || editorType == "edit-comment") {
        editor.content.innerHTML = rawTextDiv.innerHTML
      }
    };
  </script>